{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/forgot-password/forgot-password.component.ts","webpack:///src/app/components/forgot-password/forgot-password.component.html","webpack:///src/app/components/sign-in/sign-in.component.ts","webpack:///src/app/components/sign-in/sign-in.component.html","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/components/verify-email/verify-email.component.ts","webpack:///src/app/components/verify-email/verify-email.component.html","webpack:///src/app/componets/clientes/cliente/cliente.component.ts","webpack:///src/app/componets/clientes/cliente/cliente.component.html","webpack:///src/app/componets/clientes/clientes.component.ts","webpack:///src/app/componets/clientes/clientes.component.html","webpack:///src/app/componets/clientes/lista-clientes/lista-clientes.component.ts","webpack:///src/app/componets/clientes/lista-clientes/lista-clientes.component.html","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/models/cliente.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cliente.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","DashboardComponent","authService","ForgotPasswordComponent","SignInComponent","SignUpComponent","VerifyEmailComponent","ClienteComponent","clienteService","toastr","getClientes","resetForm","clienteForm","value","$key","insertCliente","updateCliente","success","reset","selectedCliente","onSubmit","ClientesComponent","ListaClientesComponent","snapshotChanges","subscribe","item","clienteList","forEach","element","x","payload","toJSON","key","push","cliente","Object","assign","confirm","deleteCliente","warning","AuthGuard","router","next","state","isLoggedIn","navigate","providedIn","Cliente","AuthService","afs","afAuth","ngZone","authState","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","result","run","SetUserData","error","window","alert","message","createUserWithEmailAndPassword","SendVerificationMail","currentUser","u","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","AuthLogin","FacebookAuthProvider","TwitterAuthProvider","GoogleAuthProvider","provider","signInWithPopup","userRef","doc","uid","displayName","photoURL","emailVerified","set","merge","signOut","removeItem","ClienteService","list","nombre","dui","mascota","tratamiento","medicamento","costo","update","remove","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//Import all the cmponents for wich navigation service has to be activated\r\nimport { SignInComponent } from \"./components/sign-in/sign-in.component\";\r\nimport { SignUpComponent } from \"./components/sign-up/sign-up.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { ForgotPasswordComponent } from \"./components/forgot-password/forgot-password.component\";\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { AuthGuard } from \"./guard/auth.guard\";\r\nimport { ClienteComponent } from \"./componets/clientes/cliente/cliente.component\";\r\nimport { ListaClientesComponent } from \"./componets/clientes/lista-clientes/lista-clientes.component\";\r\nimport { from } from 'rxjs';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\r\n  { path: 'sign-in', component: SignInComponent },\r\n  { path: 'register-user', component: SignUpComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  { path: 'verify-email-address', component: VerifyEmailComponent,},\r\n  { path: 'cliente', component: ClienteComponent},\r\n  { path: 'lista-cliente', component:ListaClientesComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Workshop';\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n  \r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from  '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\n\r\n//Firebase services + enviroment module\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\r\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\r\nimport { AngularFireDatabaseModule} from \"@angular/fire/database\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { AuthService } from './services/auth.service';\r\nimport { from } from 'rxjs';\r\n\r\n// components\r\nimport { ClientesComponent } from './componets/clientes/clientes.component';\r\n\r\nimport { ListaClientesComponent } from './componets/clientes/lista-clientes/lista-clientes.component';\r\n\r\nimport { ClienteComponent } from './componets/clientes/cliente/cliente.component';\r\n// service\r\nimport { ClienteService } from './services/cliente.service';\r\n// Toastr, para notificaciones en angular\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    VerifyEmailComponent,\r\n    ClienteComponent,\r\n    ListaClientesComponent,\r\n    ClientesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule,\r\n    FormsModule,\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [AuthService,\r\n              ClienteService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n    <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\">\r\n      <img class=\"brand-logo\" src=\"\" alt=\"Logo\">\r\n    </a>\r\n  </nav>\r\n  \r\n  <!-- Sidebar navigation -->\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n  \r\n      <nav class=\"col-md-2 d-md-block bg-light sidebar\">\r\n        <div class=\"sidebar-sticky\">\r\n          <ul class=\"nav flex-column\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\">\r\n                <i class=\"fas fa-user\"></i>User Profile\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\">\r\n                <i class=\"fas fa-prescription\"></i>Student\r\n              </a>\r\n            </li>\r\n            <!-- Calling SignOut() Api from AuthService -->\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" (click)=\"authService.SignOut()\">\r\n                <i class=\"fas fa-sign-out-alt\"></i>Log out\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Main content -->\r\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n        <div class=\"inner-adjust\">\r\n  \r\n          <div class=\"pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 class=\"h2\">User Profile</h1>\r\n          </div>\r\n          <!-- Show user data when logged in -->\r\n          <div class=\"row\" *ngIf=\"authService.userData as user\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"media\">\r\n                <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\r\n                  alt=\"{{user.displayName}}\">\r\n                <div class=\"media-body\">\r\n                  <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\r\n                  <p>User ID: <strong>{{user.uid}}</strong></p>\r\n                  <p>Email: <strong>{{user.email}}</strong></p>\r\n                  <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </main>\r\n  \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container py-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 mx-auto\">\r\n  \r\n            <div class=\"card rounded-0 p-3\">\r\n              <div class=\"card-header\">\r\n                <h3 class=\"mb-0 text-center\">Forgot Password</h3>\r\n                <img src=\"https://media.istockphoto.com/vectors/cartoon-veterinarian-character-with-cat-and-dog-vector-id1128209921?b=1&k=6&m=1128209921&s=170667a&h=SdPa_CvecW3H9NpmXcY9n7X0gI2y9KrX1VBYbfjsJwI=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n              </div>\r\n              <div class=\"displayTable\">\r\n                <div class=\"displayTableCell\">\r\n                  <div class=\"authBlock\">\r\n  \r\n        <p class=\"text-center my-3\">Please enter your email address to request a password reset.</p>\r\n  \r\n        <div class=\"formGroup my-3\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #passwordResetEmail required>\r\n        </div>\r\n  \r\n        <!-- Calling ForgotPassword from AuthService Api -->\r\n        <div class=\"form-group row justify-content-center\">\r\n          <input type=\"submit\" class=\"btn btn-primary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin row justify-content-center\">\r\n        <span>Go back to ? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<!--/row-->\r\n</div>\r\n<!--/col-->\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  \r\n<div class=\"container py-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 mx-auto\">\r\n  \r\n            <div class=\"card rounded-0 p-3\">\r\n              <div class=\"card-header\">\r\n                <h3 class=\"mb-0 text-center\">Sign In</h3>\r\n                <img src=\"https://media.istockphoto.com/vectors/woman-vet-cartoon-character-pointing-sign-vector-id997566488?b=1&k=6&m=997566488&s=170667a&h=pLLlFeh4HpkQ5ssXBWkGrqGbuCkvUviK0ApmhYMbfvs=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n              </div>\r\n              <div class=\"displayTable\">\r\n                <div class=\"displayTableCell\">\r\n                  <div class=\"authBlock\">\r\n  \r\n                    <div class=\"form-group\">\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" #userName required>\r\n                    </div>\r\n  \r\n                    <div class=\"form-group\">\r\n                      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPassword required>\r\n                    </div>\r\n  \r\n                    <div class=\"forgotPassword\">\r\n                      <span routerLink=\"/forgot-password\">Forgot Password?</span>\r\n                    </div>\r\n\r\n                    <br>\r\n  \r\n                    <!-- Calling SignIn Api from AuthService -->\r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <input type=\"button\" class=\"btn btn-success btn-lg\" value=\"Log in\"\r\n                        (click)=\"authService.SignIn(userName.value, userPassword.value)\">\r\n                    </div>\r\n  \r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <span class=\"or\"><span class=\"orInner left\">Or</span></span>\r\n                    </div>\r\n  \r\n                    <!-- Calling GoogleAuth Api from AuthService -->\r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <button type=\"button\" class=\"btn btn-primary btn-lg float-left\" (click)=\"authService.GoogleAuth()\">\r\n                        <i class=\"fab fa-google-plus-g\"></i>\r\n                        Log in with Google\r\n                      </button>\r\n                    </div>\r\n  \r\n  \r\n  \r\n                  </div>\r\n  \r\n                  <div class=\"redirectToLogin row justify-content-center\">\r\n                    <span>Don't have an account?<span class=\"redirect\" routerLink=\"/register-user\"> Sign Up</span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n        <!--/row-->\r\n      </div>\r\n      <!--/col-->\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  \r\n<div class=\"container pt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n\r\n          <div class=\"card rounded-0 p-3\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"mb-0 text-center\">Sign Up</h3>\r\n              <img src=\"https://media.istockphoto.com/vectors/vet-cartoon-character-vector-id1138852534?b=1&k=6&m=1138852534&s=170667a&h=YlOMISqwJMXFOM6vHXkeBsv7g3m8VTn_3F9KdV2Ll9U=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n            </div>\r\n            <div class=\"displayTable\">\r\n              <div class=\"displayTableCell\">\r\n                <div class=\"authBlock\">\r\n  \r\n        <div class=\"form-group\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #userEmail required>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPwd required>\r\n        </div>\r\n  \r\n        <div class=\"form-group row justify-content-center\">\r\n          <input type=\"button\" class=\"btn btn-success btn-l\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\r\n        </div>\r\n  \r\n        <div class=\"form-group row justify-content-center\">\r\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\r\n        </div>\r\n  \r\n        <!-- Continue with Google -->\r\n        <div class=\"form-group row justify-content-center\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"authService.GoogleAuth()\">\r\n            <i class=\"fab fa-google-plus-g\"></i>\r\n            Continue with Google\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin row justify-content-center\">\r\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<!--/row-->\r\n</div>\r\n<!--/col-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css']\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"displayTable\">\r\n    <div class=\"displayTableCell\">\r\n  \r\n      <div class=\"authBlock\">\r\n        <h3>Thank You for Registering</h3>\r\n  \r\n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\r\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\r\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\r\n        </div>\r\n        \r\n        <!-- Calling SendVerificationMail() method using authService Api -->\r\n        <div class=\"formGroup\">\r\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\r\n            <i class=\"fas fa-redo-alt\"></i>\r\n            Resend Verification Email\r\n          </button>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin\">\r\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { NgForm } from '@angular/forms';\r\n\r\n//  Service \r\nimport { ClienteService } from '../../../services/cliente.service';\r\n// Class\r\nimport { Cliente } from '../../../models/cliente';\r\n// toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n//Service\r\nimport { AuthService } from \"../../../services/auth.service\";\r\n\r\nimport { from } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cliente',\r\n  templateUrl: './cliente.component.html',\r\n  styleUrls: ['./cliente.component.css']\r\n})\r\nexport class ClienteComponent implements OnInit {\r\n\r\n  constructor(\r\n    public clienteService: ClienteService,\r\n    public toastr: ToastrService,\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.clienteService.getClientes();\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(clienteForm: NgForm){\r\n    if(clienteForm.value.$key == null){\r\n      this.clienteService.insertCliente(clienteForm.value);\r\n    }\r\n    else{\r\n      this.clienteService.updateCliente(clienteForm.value);\r\n      this.toastr.success('Sucessful Operation', 'No reconoce la llave');\r\n    }\r\n\r\n    this.resetForm(clienteForm);\r\n    this.toastr.success('Sucessful Operation', 'Product Registered');\r\n  }\r\n  // Para limpiar el formulario\r\n  resetForm(clienteForm?: NgForm) {\r\n    if (clienteForm != null)\r\n      clienteForm.reset();\r\n    this.clienteService.selectedCliente = new Cliente();\r\n  }\r\n}\r\n","<header>\r\n  <div class=\"header bg-dark py-4\">\r\n    <h1 class=\"text-center fotn-weight-bold text-light\">\r\n      Taller Mecanico Don Alex\r\n    </h1>\r\n  </div>\r\n</header>\r\n\r\n<section class=\"py-4\">\r\n  <div class=\"container\">\r\n    <h3 class=\"text-center text-dark pb-2 border-bottom border-dark\">\r\n      Registro de Clientes\r\n    </h3>\r\n    <div class=\"row justify-content-center mt-5\">\r\n      <form #clienteForm=\"ngForm\" class=\"w-100\" (ngSubmit)=\"onSubmit(clienteForm)\">\r\n       \r\n        <!-- TO UPDATE -->\r\n        <input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"clienteService.selectedCliente.$key\">\r\n       \r\n        <div class=\"form-group row justify-content-center\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.nombre\"\r\n            name=\"nombre\"\r\n            #nombre=\"ngModel\"\r\n            id=\"nombre\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Nombre del Cliente\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.dui\"\r\n            name=\"dui\"\r\n            #dui = \"ngModel\"\r\n            id=\"dui\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"DUI\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.mascota\"\r\n            #mascota = \"ngModel\"\r\n            name=\"mascota\"\r\n            id=\"mascota\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Nombre de la Mascota\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.tratamiento\"\r\n            #tratamiento = \"ngModel\"\r\n            name=\"tratamiento\"\r\n            id=\"tratamiento\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Tratamiento\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.medicamento\"\r\n            #medicamento = \"ngModel\"\r\n            name=\"medicamento\"\r\n            id=\"medicamento\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Medicamento Recetado\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.costo\"\r\n            #costo = \"ngModel\"\r\n            name=\"costo\"\r\n            id=\"costo\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Costo\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center my-4\">\r\n          <button type=\"submit\" class=\"btn btn-dark form-control w-25\" >\r\n            Ingresar\r\n          </button>\r\n          \r\n        </div>\r\n        <div class=\"form-group row justify-content-center my-4\">\r\n          <button type=\"reset\" class=\"btn btn-dark form-control w-25\" (click)=\"resetForm(clienteForm)\">\r\n            Borrar\r\n          </button>\r\n          \r\n        </div>\r\n\r\n\r\n      </form>\r\n      <br />\r\n\r\n      <br />\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n   \r\n\r\n <section class=\"my-2\">\r\n  <div\r\n    id=\"ticket\"\r\n\r\n    class=\"container text-center p-3 border w-75 border-dark\"\r\n  >\r\n    <h2 class=\"border-bottom border-dark\">Ticket</h2>\r\n    <h6 class=\"my-4\">Veterina Lissette</h6>\r\n    <h6 class=\"my-4\">Detalles</h6>\r\n    <strong>Cliente: </strong><label class=\"pr-2\">{{ clienteForm.value.nombre }}</label>\r\n    <strong>DUI: </strong><label class=\"pl-2\">{{ clienteForm.value.dui }}</label> <br />\r\n    <strong>Nombre de mascota: </strong><label class=\"\">{{ clienteForm.value.mascota }}</label>\r\n    <br />\r\n    <strong>Tratamiento: </strong><label class=\"\">{{ clienteForm.value.tratamiento }}</label>\r\n    <br />\r\n    <strong>Medicamento: </strong><label class=\"pr-2\">{{ clienteForm.value.medicamento }}</label>\r\n    <strong>Costo: $</strong><label class=\"pl-2\"> {{ clienteForm.value.costo }} </label>\r\n    <br />\r\n    <strong>Descuento: $</strong><label class=\"pl-2\">  </label>\r\n    <strong>Total a pagar: $</strong><label class=\"\">  </label> <br />\r\n    <label class=\"mt-5\">San Salvador, El Salvador,  fecha </label>\r\n  </div>\r\n</section> \r\n\r\n<app-lista-clientes></app-lista-clientes>","import { Component, OnInit } from '@angular/core';\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-clientes',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.css']\r\n})\r\nexport class ClientesComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n   \r\n        <app-cliente></app-cliente>\r\n        <app-lista-clientes></app-lista-clientes>\r\n   \r\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n// model\r\nimport { Cliente } from '../../../models/cliente';\r\n\r\n// service\r\nimport { ClienteService } from '../../../services/cliente.service';\r\n\r\n// toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-lista-clientes',\r\n  templateUrl: './lista-clientes.component.html',\r\n  styleUrls: ['./lista-clientes.component.css']\r\n})\r\nexport class ListaClientesComponent implements OnInit {\r\n\r\n  clienteList: Cliente[];\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n    /* \r\n    Cuando cargue la aplicación, que reciba toda la información con el método 'getProducts' del servicio de firebase\r\n     pero ademas que utilice el metodo 'snapshotChanges' para estar atento a los cambios que tengas los datos en la\r\n     base de datos de firebase, para recorrerlo con forEach. \r\n  \r\n     Cada dato lo obtengo 'payload' y lo convierto en formato JSON y lo asigno a la variable 'x'\r\n     let x = element.payload.toJSON();\r\n  \r\n     Se le asigna por cada elemento la llave de cada registro, en una propiedad llamada '$key'\r\n     por que se necesita para luego eliminar el registro\r\n     x[\"$key\"] = element.key;\r\n  \r\n     Cuando ya se tiene el elemento se asigna a mi arreglo 'clienteList' para ser mostrado en mi pantalla list\r\n     this.cleinteList.push(x as Cliente);\r\n  */\r\n ngOnInit() {\r\n  return this.clienteService.getClientes()\r\n    .snapshotChanges().subscribe(item => {\r\n      this.clienteList = [];\r\n      item.forEach(element => {\r\n        let x = element.payload.toJSON();\r\n        x[\"$key\"] = element.key;\r\n        this.clienteList.push(x as Cliente);\r\n      });\r\n    });\r\n}\r\n\r\n/* \r\n Recibe una varible de tipo 'Cliente' para invocar el servicio de firebase, para actualizarlo\r\n Para no ocupar el doble enlace de datos ' [(ngModel)]' , se va utilizar 'Object.assign({}, cliente)'  \r\n*/\r\nonEdit(cliente: Cliente) {\r\n  this.clienteService.selectedCliente = Object.assign({}, cliente);\r\n}\r\n\r\n/* \r\n Recibe la llave '$key' para eliminar el registro, invocando el metodo 'deleteProduct' del servicio de firebase\r\n ademas muestra un 'warning' con toastr\r\n*/\r\nonDelete($key: string) {\r\n  if (confirm('Are you sure you want to delete it?')) {\r\n    this.clienteService.deleteCliente($key);\r\n    this.toastr.warning('Deleted Successfully', 'Client Removed');\r\n  }\r\n}\r\n\r\n\r\n}\r\n","<section class=\"pb-2 pt-4\" id=\"registros\" \r\n>\r\n    <div class=\"d-flex justify-content-center\">\r\n      <div class=\"table-responsive w-75\">\r\n        <table class=\"table text-center\">\r\n          <thead class=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Nombre</th>\r\n              <th scope=\"col\">DUI</th>\r\n              <th scope=\"col\">Mascota</th>\r\n              <th scope=\"col\">Tratamiento</th>\r\n              <th scope=\"col\">Medicamento</th>\r\n              <th scope=\"col\">Costo</th>\r\n              <th scope=\"col\">Visita</th>\r\n              <th scope=\"col\">Descuento</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let cliente of clienteList\">\r\n              <th scope=\"row\">{{ cliente.nombre }}</th>\r\n              <td>{{ cliente.dui }}</td>\r\n              <td>{{ cliente.mascota }}</td>\r\n              <td>{{ cliente.tratamiento }}</td>\r\n              <td>{{ cliente.medicamento }}</td>\r\n              <td>{{ cliente.costo }}</td>\r\n              <td>{{ cliente.total }}</td>\r\n              <td>{{ cliente.$key }}</td>\r\n              <td>\r\n                <a class=\"btn btn-secondary text-white\" (click)=\"onEdit(cliente)\">\r\n                    <i class=\"far fa-edit\"></i>\r\n                </a>\r\n                <a class=\"btn btn-danger text-white\" (click)=\"onDelete(cliente.$key)\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                </a>\r\n            </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n     \r\n    </div>\r\n  </section>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ){ }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.authService.isLoggedIn !== true) {\r\n      this.router.navigate(['sign-in'])\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n\r\n","export class Cliente {\r\n    $key: string;\r\n    nombre: string;\r\n    dui: string;\r\n    mascota: string;\r\n    costo: number;\r\n    tratamiento: string;\r\n    medicamento: string;\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { User } from \"../models/user\";\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  userData: any; // Guardar datos de usuario registrados\r\n\r\n  constructor(\r\n    public afs: AngularFirestore,   //  Inyectar Servicio Firestore\r\n    public afAuth: AngularFireAuth, // Inyectar el servicio de autenticación de Firebase\r\n    public router: Router,  \r\n    public ngZone: NgZone // Servicio NgZone para eliminar la advertencia de alcance externo\r\n  ) {    \r\n\r\n    /* Guardar datos de usuario en almacenamiento local cuando\r\n    iniciado sesión y configurando nulo al cerrar sesión*/\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n  }\r\n\r\n  // Iniciar sesión con correo electrónico / contraseña\r\n  SignIn(email, password) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, password).then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['../componets/clientes/cliente/cliente.component']);\r\n        });\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n       // window.alert(\"Por favor revisar credenciales\")\r\n         window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Regístrese con correo electrónico / contraseña\r\n  SignUp(email, password) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        /* Llame a la función SendVerificaitonMail () cuando un nuevo usuario firme\r\n        y vuelve la funcion*/\r\n        this.SendVerificationMail();\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Enviar verificación por correo electrónico cuando se registre un nuevo usuario\r\n  SendVerificationMail() {\r\n    return this.afAuth.currentUser.then(u => u.sendEmailVerification())\r\n    .then(() => {\r\n    this.router.navigate(['verify-email-address']);\r\n    })\r\n    }\r\n\r\n  // Restablecer contraseña olvidada\r\n  ForgotPassword(passwordResetEmail) {\r\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\r\n    .then(() => {\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  // Devuelve verdadero cuando el usuario está conectado y \r\n  // el correo electrónico está verificado\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : true;\r\n  }\r\n\r\n// Iniciar sesión usando Facebook\r\n  FacebookAuth() {\r\n    return this.AuthLogin(new auth.FacebookAuthProvider());\r\n  }\r\n\r\n  // Iniciar sesión usando Twitter\r\n  TwitterAuth() {\r\n    return this.AuthLogin(new auth.TwitterAuthProvider());\r\n  }\r\n\r\n  // Iniciar sesión usando Facebook Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  // Lógica de autenticación para ejecutar cualquier proveedor de autenticación  \r\n  AuthLogin(provider) {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n       this.ngZone.run(() => {\r\n          this.router.navigate(['cliente']);\r\n          \r\n        })\r\n      this.SetUserData(result.user);\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n\r\n  /* Configurar datos de usuario al iniciar sesión con nombre de usuario / contraseña,\r\n  registrarse con nombre de usuario / contraseña e iniciar sesión con autenticación social\r\n  proveedor en la base de datos de Firestore usando el servicio AngularFirestore + AngularFirestoreDocument*/\r\n  SetUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }\r\n\r\n  // desconectar\r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.setItem('user', null);\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['sign-in']);\r\n    })\r\n  }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n//Firebase\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\n\r\n// Model\r\nimport { Cliente } from '../models/cliente';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClienteService {\r\n\r\n  // Traer los datos de firebase\r\n  clienteList: AngularFireList<any>;\r\n\r\n  // Una variable temporal, para guardar los datos seleccionados, del tipo Cliente\r\n  selectedCliente: Cliente = new Cliente();\r\n\r\n  constructor(private firebase: AngularFireDatabase) { }\r\n\r\n  // Traer todos los productos desde firebase \r\n  getClientes() { // guarda los elementos en la varible 'clientes'\r\n    return this.clienteList = this.firebase.list('clientes');\r\n  }\r\n  \r\n  // crear un nuevo cliente  , recibiendo un parametro de tipo cliente\r\n  insertCliente(cliente: Cliente) {\r\n    // agregar un dato al final de la lista, como recibe un objeto del tipo cliente , puede acceder a sus propiedades\r\n    this.clienteList.push({\r\n      nombre: cliente.nombre,\r\n      dui: cliente.dui,\r\n      mascota: cliente.mascota,\r\n      tratamiento: cliente.tratamiento,\r\n      medicamento: cliente.medicamento,      \r\n      costo: cliente.costo\r\n    });\r\n  }\r\n\r\n  // Actualiza un cliente, recibiendo un parametro de tipo Cliente\r\n  updateCliente(cliente: Cliente) {\r\n    // Utilizando el metodo update de firebase , se envia clave y los parametros que va actualizar \r\n    this.clienteList.update(cliente.$key, {\r\n      nombre: cliente.nombre,\r\n      dui: cliente.dui,\r\n      mascota: cliente.mascota,\r\n      tratamiento: cliente.tratamiento,\r\n      medicamento: cliente.medicamento,      \r\n      costo: cliente.costo\r\n    });\r\n  }\r\n\r\n  // Elimina un cliente, recibiendo como parametro la clave , utilizando el metodo remove de firebase\r\n  deleteCliente($key: string) {\r\n    this.clienteList.remove($key);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyBwx19XpOo8yv0WVG4PTbrM5yiigXgsF5c\",\r\n    authDomain: \"workshop-alex.firebaseapp.com\",\r\n    databaseURL: \"https://workshop-alex.firebaseio.com\",\r\n    projectId: \"workshop-alex\",\r\n    storageBucket: \"workshop-alex.appspot.com\",\r\n    messagingSenderId: \"717371806868\",\r\n    appId: \"1:717371806868:web:2ea392677b57b9f86d1081\",\r\n    measurementId: \"G-TWSH57Y2QZ\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}