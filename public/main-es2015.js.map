{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/verify-email/verify-email.component.ts","./src/app/components/verify-email/verify-email.component.html","./src/app/componets/clientes/cliente/cliente.component.ts","./src/app/componets/clientes/cliente/cliente.component.html","./src/app/componets/clientes/clientes.component.ts","./src/app/componets/clientes/clientes.component.html","./src/app/componets/clientes/lista-clientes/lista-clientes.component.ts","./src/app/componets/clientes/lista-clientes/lista-clientes.component.html","./src/app/guard/auth.guard.ts","./src/app/models/cliente.ts","./src/app/services/auth.service.ts","./src/app/services/cliente.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n//Import all the cmponents for wich navigation service has to be activated\r\nimport { SignInComponent } from \"./components/sign-in/sign-in.component\";\r\nimport { SignUpComponent } from \"./components/sign-up/sign-up.component\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { ForgotPasswordComponent } from \"./components/forgot-password/forgot-password.component\";\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\nimport { AuthGuard } from \"./guard/auth.guard\";\r\nimport { ClienteComponent } from \"./componets/clientes/cliente/cliente.component\";\r\nimport { ListaClientesComponent } from \"./componets/clientes/lista-clientes/lista-clientes.component\";\r\nimport { from } from 'rxjs';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\r\n  { path: 'sign-in', component: SignInComponent },\r\n  { path: 'register-user', component: SignUpComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  { path: 'verify-email-address', component: VerifyEmailComponent,},\r\n  { path: 'cliente', component: ClienteComponent},\r\n  { path: 'lista-cliente', component:ListaClientesComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Workshop';\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n  \r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from  '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\r\n\r\n//Firebase services + enviroment module\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\r\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\r\nimport { AngularFireDatabaseModule} from \"@angular/fire/database\";\r\nimport { environment } from \"../environments/environment\";\r\nimport { AuthService } from './services/auth.service';\r\nimport { from } from 'rxjs';\r\n\r\n// components\r\nimport { ClientesComponent } from './componets/clientes/clientes.component';\r\n\r\nimport { ListaClientesComponent } from './componets/clientes/lista-clientes/lista-clientes.component';\r\n\r\nimport { ClienteComponent } from './componets/clientes/cliente/cliente.component';\r\n// service\r\nimport { ClienteService } from './services/cliente.service';\r\n// Toastr, para notificaciones en angular\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    VerifyEmailComponent,\r\n    ClienteComponent,\r\n    ListaClientesComponent,\r\n    ClientesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule,\r\n    FormsModule,\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [AuthService,\r\n              ClienteService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n    <a class=\"navbar-brand col-sm-3 col-md-2 mr-0\">\r\n      <img class=\"brand-logo\" src=\"\" alt=\"Logo\">\r\n    </a>\r\n  </nav>\r\n  \r\n  <!-- Sidebar navigation -->\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n  \r\n      <nav class=\"col-md-2 d-md-block bg-light sidebar\">\r\n        <div class=\"sidebar-sticky\">\r\n          <ul class=\"nav flex-column\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\">\r\n                <i class=\"fas fa-user\"></i>User Profile\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\">\r\n                <i class=\"fas fa-prescription\"></i>Student\r\n              </a>\r\n            </li>\r\n            <!-- Calling SignOut() Api from AuthService -->\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" (click)=\"authService.SignOut()\">\r\n                <i class=\"fas fa-sign-out-alt\"></i>Log out\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Main content -->\r\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n        <div class=\"inner-adjust\">\r\n  \r\n          <div class=\"pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 class=\"h2\">User Profile</h1>\r\n          </div>\r\n          <!-- Show user data when logged in -->\r\n          <div class=\"row\" *ngIf=\"authService.userData as user\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"media\">\r\n                <img class=\"align-self-start mr-5 img-thumbnail rounded-circle\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\"\r\n                  alt=\"{{user.displayName}}\">\r\n                <div class=\"media-body\">\r\n                  <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\r\n                  <p>User ID: <strong>{{user.uid}}</strong></p>\r\n                  <p>Email: <strong>{{user.email}}</strong></p>\r\n                  <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </main>\r\n  \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"container py-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 mx-auto\">\r\n  \r\n            <div class=\"card rounded-0 p-3\">\r\n              <div class=\"card-header\">\r\n                <h3 class=\"mb-0 text-center\">Forgot Password</h3>\r\n                <img src=\"https://media.istockphoto.com/vectors/cartoon-veterinarian-character-with-cat-and-dog-vector-id1128209921?b=1&k=6&m=1128209921&s=170667a&h=SdPa_CvecW3H9NpmXcY9n7X0gI2y9KrX1VBYbfjsJwI=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n              </div>\r\n              <div class=\"displayTable\">\r\n                <div class=\"displayTableCell\">\r\n                  <div class=\"authBlock\">\r\n  \r\n        <p class=\"text-center my-3\">Please enter your email address to request a password reset.</p>\r\n  \r\n        <div class=\"formGroup my-3\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #passwordResetEmail required>\r\n        </div>\r\n  \r\n        <!-- Calling ForgotPassword from AuthService Api -->\r\n        <div class=\"form-group row justify-content-center\">\r\n          <input type=\"submit\" class=\"btn btn-primary\" value=\"Reset Password\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin row justify-content-center\">\r\n        <span>Go back to ? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<!--/row-->\r\n</div>\r\n<!--/col-->\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  \r\n<div class=\"container py-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 mx-auto\">\r\n  \r\n            <div class=\"card rounded-0 p-3\">\r\n              <div class=\"card-header\">\r\n                <h3 class=\"mb-0 text-center\">Sign In</h3>\r\n                <img src=\"https://media.istockphoto.com/vectors/woman-vet-cartoon-character-pointing-sign-vector-id997566488?b=1&k=6&m=997566488&s=170667a&h=pLLlFeh4HpkQ5ssXBWkGrqGbuCkvUviK0ApmhYMbfvs=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n              </div>\r\n              <div class=\"displayTable\">\r\n                <div class=\"displayTableCell\">\r\n                  <div class=\"authBlock\">\r\n  \r\n                    <div class=\"form-group\">\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" #userName required>\r\n                    </div>\r\n  \r\n                    <div class=\"form-group\">\r\n                      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPassword required>\r\n                    </div>\r\n  \r\n                    <div class=\"forgotPassword\">\r\n                      <span routerLink=\"/forgot-password\">Forgot Password?</span>\r\n                    </div>\r\n\r\n                    <br>\r\n  \r\n                    <!-- Calling SignIn Api from AuthService -->\r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <input type=\"button\" class=\"btn btn-success btn-lg\" value=\"Log in\"\r\n                        (click)=\"authService.SignIn(userName.value, userPassword.value)\">\r\n                    </div>\r\n  \r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <span class=\"or\"><span class=\"orInner left\">Or</span></span>\r\n                    </div>\r\n  \r\n                    <!-- Calling GoogleAuth Api from AuthService -->\r\n                    <div class=\"form-group row justify-content-center\">\r\n                      <button type=\"button\" class=\"btn btn-primary btn-lg float-left\" (click)=\"authService.GoogleAuth()\">\r\n                        <i class=\"fab fa-google-plus-g\"></i>\r\n                        Log in with Google\r\n                      </button>\r\n                    </div>\r\n  \r\n  \r\n  \r\n                  </div>\r\n  \r\n                  <div class=\"redirectToLogin row justify-content-center\">\r\n                    <span>Don't have an account?<span class=\"redirect\" routerLink=\"/register-user\"> Sign Up</span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n        <!--/row-->\r\n      </div>\r\n      <!--/col-->\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  \r\n<div class=\"container pt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n\r\n          <div class=\"card rounded-0 p-3\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"mb-0 text-center\">Sign Up</h3>\r\n              <img src=\"https://media.istockphoto.com/vectors/vet-cartoon-character-vector-id1138852534?b=1&k=6&m=1138852534&s=170667a&h=YlOMISqwJMXFOM6vHXkeBsv7g3m8VTn_3F9KdV2Ll9U=\" class=\"mx-auto d-block my-3 w-50\" alt=\"\" srcset=\"\">\r\n            </div>\r\n            <div class=\"displayTable\">\r\n              <div class=\"displayTableCell\">\r\n                <div class=\"authBlock\">\r\n  \r\n        <div class=\"form-group\">\r\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #userEmail required>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPwd required>\r\n        </div>\r\n  \r\n        <div class=\"form-group row justify-content-center\">\r\n          <input type=\"button\" class=\"btn btn-success btn-l\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\r\n        </div>\r\n  \r\n        <div class=\"form-group row justify-content-center\">\r\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\r\n        </div>\r\n  \r\n        <!-- Continue with Google -->\r\n        <div class=\"form-group row justify-content-center\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"authService.GoogleAuth()\">\r\n            <i class=\"fab fa-google-plus-g\"></i>\r\n            Continue with Google\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin row justify-content-center\">\r\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<!--/row-->\r\n</div>\r\n<!--/col-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-verify-email',\r\n  templateUrl: './verify-email.component.html',\r\n  styleUrls: ['./verify-email.component.css']\r\n})\r\nexport class VerifyEmailComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"displayTable\">\r\n    <div class=\"displayTableCell\">\r\n  \r\n      <div class=\"authBlock\">\r\n        <h3>Thank You for Registering</h3>\r\n  \r\n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\r\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\r\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\r\n        </div>\r\n        \r\n        <!-- Calling SendVerificationMail() method using authService Api -->\r\n        <div class=\"formGroup\">\r\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\r\n            <i class=\"fas fa-redo-alt\"></i>\r\n            Resend Verification Email\r\n          </button>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n      <div class=\"redirectToLogin\">\r\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { NgForm } from '@angular/forms';\r\n\r\n//  Service \r\nimport { ClienteService } from '../../../services/cliente.service';\r\n// Class\r\nimport { Cliente } from '../../../models/cliente';\r\n// toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n//Service\r\nimport { AuthService } from \"../../../services/auth.service\";\r\n\r\nimport { from } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cliente',\r\n  templateUrl: './cliente.component.html',\r\n  styleUrls: ['./cliente.component.css']\r\n})\r\nexport class ClienteComponent implements OnInit {\r\n\r\n  constructor(\r\n    public clienteService: ClienteService,\r\n    public toastr: ToastrService,\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.clienteService.getClientes();\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(clienteForm: NgForm){\r\n    if(clienteForm.value.$key == null){\r\n      this.clienteService.insertCliente(clienteForm.value);\r\n    }\r\n    else{\r\n      this.clienteService.updateCliente(clienteForm.value);\r\n      this.toastr.success('Sucessful Operation', 'No reconoce la llave');\r\n    }\r\n\r\n    this.resetForm(clienteForm);\r\n    this.toastr.success('Sucessful Operation', 'Product Registered');\r\n  }\r\n  // Para limpiar el formulario\r\n  resetForm(clienteForm?: NgForm) {\r\n    if (clienteForm != null)\r\n      clienteForm.reset();\r\n    this.clienteService.selectedCliente = new Cliente();\r\n  }\r\n}\r\n","<header>\r\n  <div class=\"header bg-dark py-4\">\r\n    <h1 class=\"text-center fotn-weight-bold text-light\">\r\n      Taller Mecanico Don Alex\r\n    </h1>\r\n  </div>\r\n</header>\r\n\r\n<section class=\"py-4\">\r\n  <div class=\"container\">\r\n    <h3 class=\"text-center text-dark pb-2 border-bottom border-dark\">\r\n      Registro de Clientes\r\n    </h3>\r\n    <div class=\"row justify-content-center mt-5\">\r\n      <form #clienteForm=\"ngForm\" class=\"w-100\" (ngSubmit)=\"onSubmit(clienteForm)\">\r\n       \r\n        <!-- TO UPDATE -->\r\n        <input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"clienteService.selectedCliente.$key\">\r\n       \r\n        <div class=\"form-group row justify-content-center\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.nombre\"\r\n            name=\"nombre\"\r\n            #nombre=\"ngModel\"\r\n            id=\"nombre\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Nombre del Cliente\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.dui\"\r\n            name=\"dui\"\r\n            #dui = \"ngModel\"\r\n            id=\"dui\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"DUI\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.mascota\"\r\n            #mascota = \"ngModel\"\r\n            name=\"mascota\"\r\n            id=\"mascota\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Nombre de la Mascota\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.tratamiento\"\r\n            #tratamiento = \"ngModel\"\r\n            name=\"tratamiento\"\r\n            id=\"tratamiento\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Tratamiento\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.medicamento\"\r\n            #medicamento = \"ngModel\"\r\n            name=\"medicamento\"\r\n            id=\"medicamento\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Medicamento Recetado\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center mt-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"clienteService.selectedCliente.costo\"\r\n            #costo = \"ngModel\"\r\n            name=\"costo\"\r\n            id=\"costo\"\r\n            class=\"form-control w-50\"\r\n            required\r\n            placeholder=\"Costo\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group row justify-content-center my-4\">\r\n          <button type=\"submit\" class=\"btn btn-dark form-control w-25\" >\r\n            Ingresar\r\n          </button>\r\n          \r\n        </div>\r\n        <div class=\"form-group row justify-content-center my-4\">\r\n          <button type=\"reset\" class=\"btn btn-dark form-control w-25\" (click)=\"resetForm(clienteForm)\">\r\n            Borrar\r\n          </button>\r\n          \r\n        </div>\r\n\r\n\r\n      </form>\r\n      <br />\r\n\r\n      <br />\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n   \r\n\r\n <section class=\"my-2\">\r\n  <div\r\n    id=\"ticket\"\r\n\r\n    class=\"container text-center p-3 border w-75 border-dark\"\r\n  >\r\n    <h2 class=\"border-bottom border-dark\">Ticket</h2>\r\n    <h6 class=\"my-4\">Veterina Lissette</h6>\r\n    <h6 class=\"my-4\">Detalles</h6>\r\n    <strong>Cliente: </strong><label class=\"pr-2\">{{ clienteForm.value.nombre }}</label>\r\n    <strong>DUI: </strong><label class=\"pl-2\">{{ clienteForm.value.dui }}</label> <br />\r\n    <strong>Nombre de mascota: </strong><label class=\"\">{{ clienteForm.value.mascota }}</label>\r\n    <br />\r\n    <strong>Tratamiento: </strong><label class=\"\">{{ clienteForm.value.tratamiento }}</label>\r\n    <br />\r\n    <strong>Medicamento: </strong><label class=\"pr-2\">{{ clienteForm.value.medicamento }}</label>\r\n    <strong>Costo: $</strong><label class=\"pl-2\"> {{ clienteForm.value.costo }} </label>\r\n    <br />\r\n    <strong>Descuento: $</strong><label class=\"pl-2\">  </label>\r\n    <strong>Total a pagar: $</strong><label class=\"\">  </label> <br />\r\n    <label class=\"mt-5\">San Salvador, El Salvador,  fecha </label>\r\n  </div>\r\n</section> \r\n\r\n<app-lista-clientes></app-lista-clientes>","import { Component, OnInit } from '@angular/core';\r\n//Service\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-clientes',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.css']\r\n})\r\nexport class ClientesComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n   \r\n        <app-cliente></app-cliente>\r\n        <app-lista-clientes></app-lista-clientes>\r\n   \r\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n// model\r\nimport { Cliente } from '../../../models/cliente';\r\n\r\n// service\r\nimport { ClienteService } from '../../../services/cliente.service';\r\n\r\n// toastr\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-lista-clientes',\r\n  templateUrl: './lista-clientes.component.html',\r\n  styleUrls: ['./lista-clientes.component.css']\r\n})\r\nexport class ListaClientesComponent implements OnInit {\r\n\r\n  clienteList: Cliente[];\r\n\r\n  constructor(\r\n    private clienteService: ClienteService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n    /* \r\n    Cuando cargue la aplicación, que reciba toda la información con el método 'getProducts' del servicio de firebase\r\n     pero ademas que utilice el metodo 'snapshotChanges' para estar atento a los cambios que tengas los datos en la\r\n     base de datos de firebase, para recorrerlo con forEach. \r\n  \r\n     Cada dato lo obtengo 'payload' y lo convierto en formato JSON y lo asigno a la variable 'x'\r\n     let x = element.payload.toJSON();\r\n  \r\n     Se le asigna por cada elemento la llave de cada registro, en una propiedad llamada '$key'\r\n     por que se necesita para luego eliminar el registro\r\n     x[\"$key\"] = element.key;\r\n  \r\n     Cuando ya se tiene el elemento se asigna a mi arreglo 'clienteList' para ser mostrado en mi pantalla list\r\n     this.cleinteList.push(x as Cliente);\r\n  */\r\n ngOnInit() {\r\n  return this.clienteService.getClientes()\r\n    .snapshotChanges().subscribe(item => {\r\n      this.clienteList = [];\r\n      item.forEach(element => {\r\n        let x = element.payload.toJSON();\r\n        x[\"$key\"] = element.key;\r\n        this.clienteList.push(x as Cliente);\r\n      });\r\n    });\r\n}\r\n\r\n/* \r\n Recibe una varible de tipo 'Cliente' para invocar el servicio de firebase, para actualizarlo\r\n Para no ocupar el doble enlace de datos ' [(ngModel)]' , se va utilizar 'Object.assign({}, cliente)'  \r\n*/\r\nonEdit(cliente: Cliente) {\r\n  this.clienteService.selectedCliente = Object.assign({}, cliente);\r\n}\r\n\r\n/* \r\n Recibe la llave '$key' para eliminar el registro, invocando el metodo 'deleteProduct' del servicio de firebase\r\n ademas muestra un 'warning' con toastr\r\n*/\r\nonDelete($key: string) {\r\n  if (confirm('Are you sure you want to delete it?')) {\r\n    this.clienteService.deleteCliente($key);\r\n    this.toastr.warning('Deleted Successfully', 'Client Removed');\r\n  }\r\n}\r\n\r\n\r\n}\r\n","<section class=\"pb-2 pt-4\" id=\"registros\" \r\n>\r\n    <div class=\"d-flex justify-content-center\">\r\n      <div class=\"table-responsive w-75\">\r\n        <table class=\"table text-center\">\r\n          <thead class=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Nombre</th>\r\n              <th scope=\"col\">DUI</th>\r\n              <th scope=\"col\">Mascota</th>\r\n              <th scope=\"col\">Tratamiento</th>\r\n              <th scope=\"col\">Medicamento</th>\r\n              <th scope=\"col\">Costo</th>\r\n              <th scope=\"col\">Visita</th>\r\n              <th scope=\"col\">Descuento</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let cliente of clienteList\">\r\n              <th scope=\"row\">{{ cliente.nombre }}</th>\r\n              <td>{{ cliente.dui }}</td>\r\n              <td>{{ cliente.mascota }}</td>\r\n              <td>{{ cliente.tratamiento }}</td>\r\n              <td>{{ cliente.medicamento }}</td>\r\n              <td>{{ cliente.costo }}</td>\r\n              <td>{{ cliente.total }}</td>\r\n              <td>{{ cliente.$key }}</td>\r\n              <td>\r\n                <a class=\"btn btn-secondary text-white\" (click)=\"onEdit(cliente)\">\r\n                    <i class=\"far fa-edit\"></i>\r\n                </a>\r\n                <a class=\"btn btn-danger text-white\" (click)=\"onDelete(cliente.$key)\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                </a>\r\n            </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n     \r\n    </div>\r\n  </section>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ){ }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.authService.isLoggedIn !== true) {\r\n      this.router.navigate(['sign-in'])\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n\r\n","export class Cliente {\r\n    $key: string;\r\n    nombre: string;\r\n    dui: string;\r\n    mascota: string;\r\n    costo: number;\r\n    tratamiento: string;\r\n    medicamento: string;\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { User } from \"../models/user\";\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  userData: any; // Guardar datos de usuario registrados\r\n\r\n  constructor(\r\n    public afs: AngularFirestore,   //  Inyectar Servicio Firestore\r\n    public afAuth: AngularFireAuth, // Inyectar el servicio de autenticación de Firebase\r\n    public router: Router,  \r\n    public ngZone: NgZone // Servicio NgZone para eliminar la advertencia de alcance externo\r\n  ) {    \r\n\r\n    /* Guardar datos de usuario en almacenamiento local cuando\r\n    iniciado sesión y configurando nulo al cerrar sesión*/\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n  }\r\n\r\n  // Iniciar sesión con correo electrónico / contraseña\r\n  SignIn(email, password) {\r\n    return this.afAuth.signInWithEmailAndPassword(email, password).then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['../componets/clientes/cliente/cliente.component']);\r\n        });\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n       // window.alert(\"Por favor revisar credenciales\")\r\n         window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Regístrese con correo electrónico / contraseña\r\n  SignUp(email, password) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        /* Llame a la función SendVerificaitonMail () cuando un nuevo usuario firme\r\n        y vuelve la funcion*/\r\n        this.SendVerificationMail();\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n\r\n  // Enviar verificación por correo electrónico cuando se registre un nuevo usuario\r\n  SendVerificationMail() {\r\n    return this.afAuth.currentUser.then(u => u.sendEmailVerification())\r\n    .then(() => {\r\n    this.router.navigate(['verify-email-address']);\r\n    })\r\n    }\r\n\r\n  // Restablecer contraseña olvidada\r\n  ForgotPassword(passwordResetEmail) {\r\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\r\n    .then(() => {\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  // Devuelve verdadero cuando el usuario está conectado y \r\n  // el correo electrónico está verificado\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : true;\r\n  }\r\n\r\n// Iniciar sesión usando Facebook\r\n  FacebookAuth() {\r\n    return this.AuthLogin(new auth.FacebookAuthProvider());\r\n  }\r\n\r\n  // Iniciar sesión usando Twitter\r\n  TwitterAuth() {\r\n    return this.AuthLogin(new auth.TwitterAuthProvider());\r\n  }\r\n\r\n  // Iniciar sesión usando Facebook Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  // Lógica de autenticación para ejecutar cualquier proveedor de autenticación  \r\n  AuthLogin(provider) {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n       this.ngZone.run(() => {\r\n          this.router.navigate(['cliente']);\r\n          \r\n        })\r\n      this.SetUserData(result.user);\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n\r\n  /* Configurar datos de usuario al iniciar sesión con nombre de usuario / contraseña,\r\n  registrarse con nombre de usuario / contraseña e iniciar sesión con autenticación social\r\n  proveedor en la base de datos de Firestore usando el servicio AngularFirestore + AngularFirestoreDocument*/\r\n  SetUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }\r\n\r\n  // desconectar\r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.setItem('user', null);\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['sign-in']);\r\n    })\r\n  }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n//Firebase\r\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\r\n\r\n// Model\r\nimport { Cliente } from '../models/cliente';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClienteService {\r\n\r\n  // Traer los datos de firebase\r\n  clienteList: AngularFireList<any>;\r\n\r\n  // Una variable temporal, para guardar los datos seleccionados, del tipo Cliente\r\n  selectedCliente: Cliente = new Cliente();\r\n\r\n  constructor(private firebase: AngularFireDatabase) { }\r\n\r\n  // Traer todos los productos desde firebase \r\n  getClientes() { // guarda los elementos en la varible 'clientes'\r\n    return this.clienteList = this.firebase.list('clientes');\r\n  }\r\n  \r\n  // crear un nuevo cliente  , recibiendo un parametro de tipo cliente\r\n  insertCliente(cliente: Cliente) {\r\n    // agregar un dato al final de la lista, como recibe un objeto del tipo cliente , puede acceder a sus propiedades\r\n    this.clienteList.push({\r\n      nombre: cliente.nombre,\r\n      dui: cliente.dui,\r\n      mascota: cliente.mascota,\r\n      tratamiento: cliente.tratamiento,\r\n      medicamento: cliente.medicamento,      \r\n      costo: cliente.costo\r\n    });\r\n  }\r\n\r\n  // Actualiza un cliente, recibiendo un parametro de tipo Cliente\r\n  updateCliente(cliente: Cliente) {\r\n    // Utilizando el metodo update de firebase , se envia clave y los parametros que va actualizar \r\n    this.clienteList.update(cliente.$key, {\r\n      nombre: cliente.nombre,\r\n      dui: cliente.dui,\r\n      mascota: cliente.mascota,\r\n      tratamiento: cliente.tratamiento,\r\n      medicamento: cliente.medicamento,      \r\n      costo: cliente.costo\r\n    });\r\n  }\r\n\r\n  // Elimina un cliente, recibiendo como parametro la clave , utilizando el metodo remove de firebase\r\n  deleteCliente($key: string) {\r\n    this.clienteList.remove($key);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: \"AIzaSyBwx19XpOo8yv0WVG4PTbrM5yiigXgsF5c\",\r\n    authDomain: \"workshop-alex.firebaseapp.com\",\r\n    databaseURL: \"https://workshop-alex.firebaseio.com\",\r\n    projectId: \"workshop-alex\",\r\n    storageBucket: \"workshop-alex.appspot.com\",\r\n    messagingSenderId: \"717371806868\",\r\n    appId: \"1:717371806868:web:2ea392677b57b9f86d1081\",\r\n    measurementId: \"G-TWSH57Y2QZ\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}